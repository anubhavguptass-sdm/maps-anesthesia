@import "../src/assets/scss/variable.scss";

@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYULTRALIGHTITALIC.OTF");
  font-weight: 200;
  font-style: italic;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYTHINITALIC.OTF");
  font-weight: 300;
  font-style: italic;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYSEMIBOLDITALIC.OTF");
  font-weight: 600;
  font-style: italic;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYREGULAR.OTF");
  font-weight: 400;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYMEDIUM.OTF");
  font-weight: 500;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYLIGHTITALIC.OTF");
  font-weight: 300;
  font-style: italic;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYHEAVYITALIC.OTF");
  font-weight: 700;
  font-style: italic;
}
@font-face {
  font-family: "SF Pro Display";
  src: url("assets/fonts/SFPRODISPLAYBOLD.OTF");
  font-weight: 700;
}

body {
  font-family: "SF Pro Display";
  font-size: $font14;
  color: $primaryColor;
  background-color: $grayColor1;
  font-weight: $normal;
}

a {
  color: $primaryColor;
  text-decoration: none;
  font-weight: $normal;
}

h1,
h2,
h3,
h4,
h5,
h6,
p,
a,
label {
  font-family: "SF Pro Display";
  font-weight: $normal;
}

h1 {
  font-size: 72px;
  line-height: 64px;
}

h2 {
  font-size: 36px;
  line-height: 36px;

  strong {
    font-weight: 700;
  }

  @include sm {
    font-size: 24px;
    line-height: 32px;
  }
}

h3 {
  font-size: 30px;
  line-height: 30px;

  strong {
    font-weight: 700;
  }

  @include sm {
    font-size: 24px;
    line-height: 32px;
  }
}

h4 {
  font-size: 32px;
  line-height: 40px;

  @include sm {
    font-size: 24px;
    line-height: 32px;
  }
}

h5 {
  font-size: 24px;
  line-height: 32px;
}

h6 {
  font-size: 18px;
  line-height: 24px;
}
p {
  font-size: 16px;
  color: $primaryColor;
  opacity: 0.75;
}
a {
  color: $primaryColor;
}
td,
th {
  opacity: 0.75;
}
strong {
  font-weight: $bold;
}
.form-group {
  margin-bottom: 1.4rem;
}

.form-control {
  background: $white;
  border: 1px solid rgba(61, 57, 137, 0.1);
  box-shadow: 0px 4px 10px rgba(61, 57, 137, 0.05);
  border-radius: 10px;
  height: 60px;
  padding: 0.75rem 1.5rem;
}

.input-icon {
  position: relative;

  .form-control {
    padding-left: 75px;
  }

  em {
    position: absolute;
    left: 30px;
    top: 25px;
    font-size: 1.2rem;
    color: $grayColor4;
  }
  img {
    position: absolute;
    left: 30px;
    top: 25px;
  }
}

/* Custom Checkbox */
/* The container */
.container_c {
  display: block;
  position: relative;
  padding-left: 35px;
  font-weight: $medium;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 1rem;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default checkbox */
.container_c input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
  height: 0;
  width: 0;
}

/* Create a custom checkbox */
.checkmark_c {
  position: absolute;
  top: 0;
  left: 0;
  height: 23px;
  width: 23px;
  background-color: #fff;
  border: 1px solid #dcdcdc;
  border-radius: 6px;
}

/* On mouse-over, add a grey background color */
.container_c:hover input ~ .checkmark_c {
  background-color: #ccc;
}

/* When the checkbox is checked, add a blue background */
.container_c input:checked ~ .checkmark_c {
  background-color: $white;
  border-color: $primaryColor;
}

/* Create the checkmark/indicator (hidden when not checked) */
.checkmark_c:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the checkmark when checked */
.container_c input:checked ~ .checkmark_c:after {
  display: block;
}

/* Style the checkmark/indicator */
.container_c .checkmark_c:after {
  left: 8px;
  top: 4px;
  width: 5px;
  height: 10px;
  border: solid $primaryColor;
  border-width: 0 3px 3px 0;
  -webkit-transform: rotate(45deg);
  -ms-transform: rotate(45deg);
  transform: rotate(45deg);
}

/* Custom Checkbox */

/* Custom Radio */
.container_r {
  display: block;
  position: relative;
  padding-left: 25px;
  margin-bottom: 12px;
  cursor: pointer;
  font-size: 16px;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

/* Hide the browser's default radio button */
.container_r input {
  position: absolute;
  opacity: 0;
  cursor: pointer;
}

/* Create a custom radio button */
.checkmark_r {
  position: absolute;
  top: 2px;
  left: 0;
  height: 20px;
  width: 20px;
  background-color: $white;
  border-radius: 50%;
  border: 2px solid $primaryColor;
}

/* On mouse-over, add a grey background color */
.container_r:hover input ~ .checkmark_r {
  background-color: $grayColor1;
}

/* When the radio button is checked, add a blue background */
.container_r input:checked ~ .checkmark_r {
  background-color: $primaryColor;
}

/* Create the indicator (the dot/circle - hidden when not checked) */
.checkmark_r:after {
  content: "";
  position: absolute;
  display: none;
}

/* Show the indicator (dot/circle) when checked */
.container_r input:checked ~ .checkmark_r:after {
  display: block;
}

/* Style the indicator (dot/circle) */
.container_r .checkmark_r:after {
  top: 3px;
  left: 3px;
  width: 10px;
  height: 10px;
  border-radius: 50%;
  background: white;
}
/* Custom Radio */

.breadcrumb-nav {
  .breadcrumb {
    background-color: #fff;
    padding: 1rem 0;
    margin: 0;

    li a {
      color: #8c8c8c;
      font-size: 1rem;
    }
  }

  .breadcrumb-item + .breadcrumb-item::before {
    content: ">";
    font-family: monospace;
  }
}
.btn {
  font-size: 1rem;
  font-weight: $medium;
  padding: 10px 20px;
  border-radius: 8px;
  text-transform: uppercase;
}
.border-radius-50 {
  border-radius: 50px;
}
.btn-primary {
  background-color: $tertiaryColor;
  border-color: $tertiaryColor;
  color: $white;

  &:focus,
  &:hover {
    background-color: $primaryColor;
    border-color: $primaryColor;
  }
}
.btn-primary-outline {
  background-color: $white;
  border-color: $tertiaryColor;
  color: $tertiaryColor;

  &:focus,
  &:hover {
    background-color: $tertiaryColor;
    border-color: $tertiaryColor;
    color: $white;
  }
}
.btn-gray-outline {
  background-color: $white;
  border-color: $grayColor;
  color: $textBlack1;
  border-radius: 50px;
  text-transform: capitalize;

  &:focus,
  &:hover {
    background-color: $textBlack1;
    border-color: $grayColor;
    color: $white;
  }
}
.carousel_area {
  .slick-next {
    // background-image: url("assets/img/right_slide_arrow.png");
    width: 50px;
    height: 50px;
    background-size: 100%;
    background-repeat: no-repeat;
    top: -55px;
    right: 10px;
    &::before {
      display: none;
    }
  }
  .slick-prev {
    // background-image: url("assets/img/left_slide_arrow.png");
    width: 50px;
    height: 50px;
    background-size: 100%;
    background-repeat: no-repeat;
    top: -55px;
    left: initial;
    right: 80px;
    &::before {
      display: none;
    }
  }
}

@import "~swiper/css";
@import "~swiper/css/effect-cards";

.property_swiper {
  padding: 4rem 0;
}
.mySwiper {
  &.swiper {
    width: 400px;
    height: 550px;
  }
}

.swiper-slide {
  display: flex;
  align-items: center;
  justify-content: center;
  border-radius: 0px;
  font-size: 22px;
  font-weight: bold;
  color: #fff;
  background-color: #fff;
}

.page-content {
  display: inline-block;
  width: 100%;
  padding: 5rem 1rem 1rem 15rem;
  overflow-x: hidden;
  background-color: #f9f9ff;
  min-height: 100vh;
  @include sm {
    padding: 5rem 1rem 1rem 6rem;
  }
  h2 {
    font-size: 22px;
    color: #130f26;
    font-weight: 600;
  }
}
